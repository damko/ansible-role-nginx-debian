---

# Installation

- name: Checking if it's Debian
  fail: msg="This is not Debian. Aborted."
  when: ansible_distribution != "Debian"

- name: Adding Nginx repository
  apt_repository: repo="{{nginx_apt_repository}}" state=present update_cache=yes

- name: Adding Nginx repository key
  apt_key: url={{nginx_apt_key}} state=present

- name: Checking if Nginx is already installed
  command: dpkg -s nginx
  register: nginx_already_installed
  failed_when: nginx_already_installed.stderr.find('is not installed') != -1
  ignore_errors: yes
  
- name: Installing Nginx Packages and restarting Nginx
  apt: pkg={{item}} state=latest force=yes
  with_items: nginx_packages
  when: nginx_already_installed|failed
  notify: restart nginx

- name: "Start Nginx on boot"
  service: name=nginx enabled=true
  when: nginx_already_installed|failed
  #TODO otherwise run update?

- name: Create the directories for site (vhost) specific configurations
  file: path=/etc/nginx/{{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - "sites-available"
    - "sites-enabled"
  when: nginx_already_installed|failed




# Configuration: this part of the task can be skipped if configure_nginx == false

- name: Create webroot
  file: dest={{nginx_default_webroot}} state=directory
  when: (nginx_already_installed|failed) and (configure_nginx == true)

- name: Copy the Nginx configuration file
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  when: (nginx_already_installed|failed) and (configure_nginx == true)
  notify:
   - restart nginx

- name: Copy the Nginx default configuration file
  template: src=default.conf.j2 dest=/etc/nginx/conf.d/default.conf
  when: (nginx_already_installed|failed) and (configure_nginx == true)

- name: Copy the blockips configuration file
  template: src=blockips.conf.j2 dest=/etc/nginx/conf.d/blockips
  when: (nginx_already_installed|failed) and (configure_nginx == true)

- name: Copy the nginx default site configuration file
  template: src=vhost_default.j2 dest=/etc/nginx/sites-available/default
  when: (nginx_already_installed|failed) and (configure_nginx == true)

- name: Create the link for site enabled specific configurations
  file: path=/etc/nginx/sites-enabled/default state=link src=/etc/nginx/sites-available/default
  when: (nginx_already_installed|failed) and (configure_nginx == true)

- name: Create the configurations for sites
  template: src=vhost_template.j2 dest=/etc/nginx/sites-available/{{ item['server']['file_name'] }}.conf
  with_items: nginx_sites
  when: (nginx_already_installed|failed) and (configure_nginx == true) and (nginx_sites != 'none')
  notify:
   - reload nginx

- name: Set rights for /var/log/nginx
  file: path=/var/log/nginx state=directory owner={{nginx_user}} group={{nginx_group}} mode=0755
